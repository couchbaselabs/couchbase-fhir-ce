#################################################################
# Minimal beta stack: backend (fhir-server), frontend (fhir-admin), haproxy
# - No Couchbase in this compose (assumes backend can start without DB or uses inâ€‘memory / external)
# - Only port 80 exposed publicly via HAProxy
# - Internal service names match those in haproxy.cfg (fhir-server, fhir-admin)
# - If backend requires config.yaml, it's mounted read-only
#################################################################

services:
  fhir-server:
    build:
      context: ./backend
    mem_limit: 3g
    mem_reservation: 2g
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DEPLOYED_ENV: container
      JAVA_TOOL_OPTIONS: >-
        -Xms1g
        -Xmx2g
        -XX:MaxDirectMemorySize=512m
        -XX:+UseG1GC
        -XX:MaxGCPauseMillis=200
        -XX:+HeapDumpOnOutOfMemoryError
        -XX:HeapDumpPath=/app/logs/heap.hprof
        -XX:+ExitOnOutOfMemoryError
        -Xlog:gc*:file=/app/logs/gc.log:time,uptime,level,tags:filecount=5,filesize=10M
        -XX:NativeMemoryTracking=summary
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s
    expose:
      - "8080" # internal only; not published to host
    volumes:
      - ./config.yaml:/config.yaml:ro
    restart: unless-stopped
  fhir-admin:
    build:
      context: ./frontend
    environment:
      NGINX_ENTRYPOINT_QUIET_LOGS: 1
    expose:
      - "80" # internal only; served through haproxy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "1"
    depends_on:
      - fhir-server
    restart: unless-stopped

  haproxy:
    image: haproxy:2.9-alpine
    ports:
      - "80:80" # only public entry
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - fhir-admin
      - fhir-server
    restart: unless-stopped

volumes: {}
